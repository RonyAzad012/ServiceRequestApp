@model ServiceRequestApp.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-5 col-md-7">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-primary text-white text-center py-4">
                    <h3 class="fw-bold mb-0">
                        <i class="fas fa-sign-in-alt me-2"></i>Welcome Back
                    </h3>
                    <p class="mb-0 mt-2 opacity-75">Sign in to your account</p>
                </div>
                <div class="card-body p-5">
                    <form asp-action="Login" method="post" class="needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="form-floating mb-4">
                            <input asp-for="Email" class="form-control" placeholder="name@example.com" required />
                            <label asp-for="Email">
                                <i class="fas fa-envelope me-2"></i>Email Address
                            </label>
                            <span asp-validation-for="Email" class="invalid-feedback"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <input asp-for="Password" class="form-control" placeholder="Password" required />
                            <label asp-for="Password">
                                <i class="fas fa-lock me-2"></i>Password
                            </label>
                            <span asp-validation-for="Password" class="invalid-feedback"></span>
                        </div>

                        <div class="form-check mb-4">
                            <input asp-for="RememberMe" class="form-check-input" type="checkbox" />
                            <label asp-for="RememberMe" class="form-check-label">
                                Remember me for 30 days
                            </label>
                        </div>

                        <button type="submit" class="btn btn-primary btn-lg w-100 mb-4">
                            <i class="fas fa-sign-in-alt me-2"></i>Sign In
                        </button>
                    </form>

                    <div class="text-center">
                        <p class="text-muted mb-3">Don't have an account?</p>
                        <div class="d-grid gap-2">
                            <a asp-action="RequesterRegister" class="btn btn-outline-primary">
                                <i class="fas fa-user-plus me-2"></i>Sign Up as Customer
                            </a>
                            <a asp-action="ProviderRegister" class="btn btn-outline-success">
                                <i class="fas fa-briefcase me-2"></i>Sign Up as Provider
                            </a>
                            <a asp-action="TaskerRegister" class="btn btn-outline-info">
                                <i class="fas fa-user-cog me-2"></i>Sign Up as Tasker
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Additional Info Card -->
            <div class="card mt-4 border-0 bg-light">
                <div class="card-body text-center">
                    <h6 class="fw-bold text-primary mb-2">
                        <i class="fas fa-shield-alt me-2"></i>Secure & Trusted
                    </h6>
                    <p class="text-muted small mb-0">
                        Your data is protected with enterprise-grade security. 
                        We never share your personal information.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 1rem;
    }
    
    .card-header {
        border-radius: 1rem 1rem 0 0 !important;
    }
    
    .form-floating > .form-control:focus ~ label {
        color: var(--primary-color);
    }
    
    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }
    
    .btn {
        border-radius: 0.5rem;
        font-weight: 500;
    }
    
    .invalid-feedback {
        display: block;
    }
    
    .needs-validation .form-control:invalid {
        border-color: var(--accent-danger);
    }
    
    .needs-validation .form-control:valid {
        border-color: var(--accent-success);
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <script>
        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
        
        // Add loading state to submit button
        document.querySelector('form').addEventListener('submit', function() {
            const submitBtn = document.querySelector('button[type="submit"]');
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Signing In...';
            submitBtn.disabled = true;
        });
    </script>
} 