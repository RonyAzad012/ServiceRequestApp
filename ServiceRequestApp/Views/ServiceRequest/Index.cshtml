@using Microsoft.AspNetCore.Identity
@model IEnumerable<ServiceRequestApp.Models.ServiceRequest>
@inject UserManager<ApplicationUser> UserManager
@using ServiceRequestApp.Models

@{
    ViewData["Title"] = "Service Requests";
    var currentUser = await UserManager.GetUserAsync(User);
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-4">Service Requests</h1>
        @if (currentUser.UserType == "Requester")
        {
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="fas fa-plus"></i> Create New Request
            </a>
        }
    </div>

    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-md-6">
                <div class="card h-100 shadow-sm hover-shadow">
                    <div class="card-header bg-light">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">@item.Title</h5>
                            <span class="badge @(item.Status switch {
                                "Pending" => "bg-warning",
                                "Accepted" => "bg-info",
                                "Completed" => "bg-success",
                                _ => "bg-secondary"
                            })">@item.Status</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h6 class="card-subtitle mb-3 text-primary">
                            <i class="fas fa-tools me-2"></i>@item.ServiceType
                        </h6>
                        <p class="card-text">@item.Description</p>
                        <div class="text-muted small mb-3">
                            <i class="far fa-clock me-1"></i>
                            Created: @item.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                        </div>

                        <div class="d-flex gap-2 flex-wrap">
                            <a asp-action="Details" asp-route-id="@item.Id"
                               class="btn btn-outline-info">
                                <i class="fas fa-info-circle"></i> Details
                            </a>

                            @if (currentUser.UserType == "Provider" && item.Status == "Pending")
                            {
                                <form asp-action="Accept" asp-route-id="@item.Id" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-check"></i> Accept Request
                                    </button>
                                </form>
                            }

                            @if (item.Status == "Accepted" &&
                           (item.RequesterId == currentUser.Id ||
                           item.AcceptedRequest?.ProviderId == currentUser.Id))
                            {
                                <form asp-action="Complete" asp-route-id="@item.Id" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-outline-success">
                                        <i class="fas fa-check-circle"></i> Mark Complete
                                    </button>
                                </form>
                            }

                            @if (item.Status == "Pending" && item.RequesterId == currentUser.Id)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id"
                                   class="btn btn-outline-primary">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id"
                                   class="btn btn-outline-danger">
                                    <i class="fas fa-trash"></i> Delete
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .hover-shadow {
        transition: all 0.3s ease;
    }

        .hover-shadow:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }

    .card {
        border-radius: 10px;
        border: none;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        border-bottom: 1px solid rgba(0,0,0,.125);
    }

    .btn {
        border-radius: 6px;
    }

    .badge {
        padding: 0.5em 1em;
        border-radius: 6px;
    }
</style>

@section Scripts {
    <script src="https://kit.fontawesome.com/your-font-awesome-kit.js"></script>
} 