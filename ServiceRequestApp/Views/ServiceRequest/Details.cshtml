@using Microsoft.AspNetCore.Identity
@using ServiceRequestApp.Models
@inject UserManager<ApplicationUser> UserManager
@inject ServiceRequestApp.Data.ApplicationDbContext DbContext
@model ServiceRequestApp.Models.ServiceRequest

@{
    ViewData["Title"] = "Request Details";
    var currentUser = await UserManager.GetUserAsync(User);
    var hasApplied = false;
    if (currentUser != null && currentUser.UserType == "Provider")
    {
        hasApplied = DbContext.ServiceRequestApplications.Any(a => a.ServiceRequestId == Model.Id && a.ProviderId == currentUser.Id);
    }
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">@Model.Title</h2>
                    <h6 class="card-subtitle mb-3 text-muted">@Model.ServiceType</h6>

                    <dl class="row">
                        <dt class="col-sm-3">Description</dt>
                        <dd class="col-sm-9">@Model.Description</dd>

                        <dt class="col-sm-3">Status</dt>
                        <dd class="col-sm-9">@Model.Status</dd>

                        <dt class="col-sm-3">Created At</dt>
                        <dd class="col-sm-9">@Model.CreatedAt.ToString("g")</dd>

                        <dt class="col-sm-3">Requester</dt>
                        <dd class="col-sm-9">@($"{Model.Requester.FirstName} {Model.Requester.LastName}")</dd>

                        <dt class="col-sm-3">Address</dt>
                        <dd class="col-sm-9">@Model.Address</dd>

                        <dt class="col-sm-3">Zipcode</dt>
                        <dd class="col-sm-9">@Model.Zipcode</dd>

                        <dt class="col-sm-3">Price</dt>
                        <dd class="col-sm-9">@Model.Price.ToString("C")</dd>

                        <dt class="col-sm-3">Phone Number</dt>
                        <dd class="col-sm-9">@Model.PhoneNumber</dd>

                        <dt class="col-sm-3">Deadline</dt>
                        <dd class="col-sm-9">@(Model.Deadline?.ToString("d") ?? "N/A")</dd>

                        @if (!string.IsNullOrEmpty(Model.ImagePaths))
                        {
                            <dt class="col-sm-3">Images</dt>
                            <dd class="col-sm-9">
                                @foreach (var img in Model.ImagePaths.Split(','))
                                {
                                    <img src="@img" alt="Request Image" style="max-width:120px;max-height:120px;margin-right:10px;" />
                                }
                            </dd>
                        }

                        @if (Model.AcceptedRequest != null)
                        {
                            <dt class="col-sm-3">Provider</dt>
                            <dd class="col-sm-9">
                                @($"{Model.AcceptedRequest.Provider.FirstName} {Model.AcceptedRequest.Provider.LastName}")
                                <a asp-action="ProviderReviews" asp-route-providerId="@Model.AcceptedRequest.ProviderId" class="ms-2 btn btn-link btn-sm">View Reviews</a>
                            </dd>

                            <dt class="col-sm-3">Accepted At</dt>
                            <dd class="col-sm-9">@Model.AcceptedRequest.AcceptedAt.ToString("g")</dd>
                        }

                        <dt class="col-sm-3">Payment Status</dt>
                        <dd class="col-sm-9">@Model.PaymentStatus ?? "Pending"</dd>
                        @if (Model.PaymentStatus == "Paid")
                        {
                            <dt class="col-sm-3">Payment Date</dt>
                            <dd class="col-sm-9">@Model.PaymentDate?.ToString("g")</dd>
                            <dt class="col-sm-3">Transaction ID</dt>
                            <dd class="col-sm-9">@Model.PaymentTransactionId</dd>
                        }
                        @if (Model.Status == "Accepted" && Model.PaymentStatus != "Paid" && currentUser.UserType == "Requester")
                        {
                            <dt class="col-sm-3">Action</dt>
                            <dd class="col-sm-9">
                                <a asp-action="Pay" asp-route-id="@Model.Id" class="btn btn-warning">Pay Now</a>
                            </dd>
                        }
                        <dt class="col-sm-3">Category</dt>
                        <dd class="col-sm-9">@(Model.Category?.Name ?? "N/A")</dd>
                    </dl>

                    <div id="map" style="height: 400px;" class="mb-3"></div>

                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>

                        @if (currentUser.UserType == "Provider" && Model.Status == "Pending")
                        {
                            <form asp-action="Accept" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-success">Accept Request</button>
                            </form>
                        }

                        @if (Model.Status == "Accepted" &&
                        (Model.RequesterId == currentUser.Id ||
                        Model.AcceptedRequest?.ProviderId == currentUser.Id))
                        {
                            <form asp-action="Complete" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-primary">Mark as Completed</button>
                            </form>
                        }
                    </div>

                    @if (TempData["ReviewMessage"] != null)
                    {
                        <div class="alert alert-info">@TempData["ReviewMessage"]</div>
                    }
                    @{
                        var canReview = Model.Status == "Completed" && currentUser.UserType == "Requester" && Model.RequesterId == currentUser.Id;
                    }
                    @if (canReview)
                    {
                        <a asp-action="AddReview" asp-route-id="@Model.Id" class="btn btn-outline-primary">Submit Review</a>
                    }

                    @if (TempData["ApplicationMessage"] != null)
                    {
                        <div class="alert alert-info">@TempData["ApplicationMessage"]</div>
                    }
                    @if (currentUser.UserType == "Provider" && Model.Status == "Pending" && !hasApplied)
                    {
                        <form asp-action="Apply" asp-route-id="@Model.Id" method="post" class="d-inline">
                            <input type="text" name="message" class="form-control mb-2" placeholder="Optional message to requester" />
                            <input type="number" name="offeredPrice" class="form-control mb-2" placeholder="Your price offer (optional)" step="0.01" min="0" />
                            <button type="submit" class="btn btn-success">Apply for Request</button>
                        </form>
                    }
                    else if (currentUser.UserType == "Provider" && Model.Status == "Pending" && hasApplied)
                    {
                        <span class="badge bg-info">You have applied for this request</span>
                    }

                    @if (currentUser.UserType == "Requester" && Model.Status == "Pending")
                    {
                        <a asp-action="Applicants" asp-route-id="@Model.Id" class="btn btn-outline-info">View Applicants</a>
                    }
                    @if (currentUser.UserType == "Requester" && Model.AcceptedRequest != null)
                    {
                        <a asp-controller="Message" asp-action="Thread" asp-route-serviceRequestId="@Model.Id" asp-route-withUserId="@Model.AcceptedRequest.ProviderId" class="btn btn-outline-primary">Message Provider</a>
                    }
                    @if (currentUser.UserType == "Provider" && Model.AcceptedRequest != null && Model.AcceptedRequest.ProviderId == currentUser.Id)
                    {
                        <a asp-controller="Message" asp-action="Thread" asp-route-serviceRequestId="@Model.Id" asp-route-withUserId="@Model.RequesterId" class="btn btn-outline-primary">Message Requester</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        // Initialize the map
        var map = L.map('map').setView([@Model.Latitude, @Model.Longitude], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Add marker for the request location
        L.marker([@Model.Latitude, @Model.Longitude]).addTo(map);
    </script>
}}