@using Microsoft.AspNetCore.Identity
@using ServiceRequestApp.Models
@model ServiceRequestApp.Models.ServiceRequest
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Request Details";
    var currentUser = await UserManager.GetUserAsync(User);
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">@Model.Title</h2>
                    <h6 class="card-subtitle mb-3 text-muted">@Model.ServiceType</h6>

                    <dl class="row">
                        <dt class="col-sm-3">Description</dt>
                        <dd class="col-sm-9">@Model.Description</dd>

                        <dt class="col-sm-3">Status</dt>
                        <dd class="col-sm-9">@Model.Status</dd>

                        <dt class="col-sm-3">Created At</dt>
                        <dd class="col-sm-9">@Model.CreatedAt.ToString("g")</dd>

                        <dt class="col-sm-3">Requester</dt>
                        <dd class="col-sm-9">@($"{Model.Requester.FirstName} {Model.Requester.LastName}")</dd>

                        @if (Model.AcceptedRequest != null)
                        {
                            <dt class="col-sm-3">Provider</dt>
                            <dd class="col-sm-9">@($"{Model.AcceptedRequest.Provider.FirstName} {Model.AcceptedRequest.Provider.LastName}")</dd>

                            <dt class="col-sm-3">Accepted At</dt>
                            <dd class="col-sm-9">@Model.AcceptedRequest.AcceptedAt.ToString("g")</dd>
                        }
                    </dl>

                    <div id="map" style="height: 400px;" class="mb-3"></div>

                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>

                        @if (currentUser.UserType == "Provider" && Model.Status == "Pending")
                        {
                            <form asp-action="Accept" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-success">Accept Request</button>
                            </form>
                        }

                        @if (Model.Status == "Accepted" &&
                        (Model.RequesterId == currentUser.Id ||
                        Model.AcceptedRequest?.ProviderId == currentUser.Id))
                        {
                            <form asp-action="Complete" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                <button type="submit" class="btn btn-primary">Mark as Completed</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        // Initialize the map
        var map = L.map('map').setView([@Model.Latitude, @Model.Longitude], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Add marker for the request location
        L.marker([@Model.Latitude, @Model.Longitude]).addTo(map);
    </script>
} 